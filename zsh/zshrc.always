# If you come from bash you might have to change your $PATH.
export PATH=/usr/local/opt/make/libexec/gnubin:$HOME/Development/sources/fpga/fpga-toolchain/bin:/usr/local/bin:/usr/local/sbin:$HOME/Work/ios_team/bin:$HOME/Work/ios-tools/bin:$HOME/bin:$HOME/go/bin:$PATH
export PYTHONPATH=${PYTHONPATH}:$HOME/Work/ios_team/:$HOME/Work/

# Path to your oh-my-zsh installation.
export ZSH="/Users/ronyk/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="jonathan"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
ZSH_PYENV_VIRTUALENV=false
plugins=(git autojump pyenv sudo fzf)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

################################################################################
# functions
################################################################################

figr() { grep --color -rnsi $1 * ; }

ff()
{
    if [ -z "$1" ]; then
	return;
    fi
    find . -name "*$1*";
}

copy()
{
    if [ 0 == $# ]; then
        echo "$0 <string to copy>"
        exit
    fi

    echo $1 | tr -d '\n' | pbcopy && echo "$1 was copied to clipboard"
}

################################################################################
# aliases
################################################################################

alias gtkwave="/Applications/gtkwave.app/Contents/Resources/bin/gtkwave"
alias minicom_last='ls -lhrt /dev/cu.usb* | tail -1 | awk "{print \$NF}" | xargs -o minicom -D'
alias printcolors='for i in {0..255}; do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done'
alias fastdl='aria2c -x 16 -s 16 -k 2M --file-allocation=none'
alias upmaster='git checkout master && git pull --ff-only upstream master && git push origin master'
alias cpwd="pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'"

alias ks='killall ssh'
alias psg='ps -eflw | grep'

alias gs='git status'
alias ga='git add'
alias gc='git checkout'
alias gci='git commit'
alias gdi='git diff'
alias gdt='git difftool'
alias gl='git log'
# alias gb='git branch'
# alias gsth='git stash'
alias gps='git push'
alias gpl='git pull'
alias gpff='git pull --ff-only'
alias gist='git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'


################################################################################
# key bindings
################################################################################

# Alt + g --> append " | grep " to the end of line
# bindkey -s "\e\C-g" "\C-e | grep --color -ernsi "
bindkey -s "\eg" "\C-e | grep --color -ernsi "

# Ctrl + Alt + l --> append " | less " to the end of line
#"\e\C-l":"\C-e | less\C-m"
bindkey -s "\e\C-l" "\C-e | less"


################################################################################
# inits of things
################################################################################

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
